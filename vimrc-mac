"
"     _   _             _  __
"    | | | | ___   ___ | |/ /
"    | |_| |/ _ \ / _ \| ' / 
"    |  _  | (_) | (_) | . \ 
"    |_| |_|\___/ \___/|_|\_\
"                            
"
"
set encoding=utf-8
set cursorline
set wrap
set wildmenu
set nocompatible
set showcmd
set hlsearch
exec "noh"
set incsearch
set ignorecase
set smartcase
syntax on 
set hlsearch
set tabstop=4
set shiftwidth=4
set softtabstop=4
set showmatch
set scrolloff=5
set foldmethod=indent
set autochdir
au BufReadPost * if line("'\"")>1 && line("'\"") <= line("$") | exe "normal !g\"" | endif
filetype plugin on
filetype on
filetype indent on
filetype plugin indent on
let mapleader=" "
map tt :tabe<CR>
map th :-tabnext<CR>
map tl :+tabnext<CR>
map <LEADER>rc :e ~/.vimrc<CR>
map <LEADER>/ :!
map <LEADER>r :r !
"上下翻页，但是不移动光标
noremap <C-y> 5<C-y>
noremap <C-e> 5<C-e>
inoremap <C-y> <Esc>5<C-y>a
inoremap <C-e> <Esc>5<C-e>a
"在输入模式移动光标
inoremap <C-h> <Esc>ha
inoremap <C-j> <Esc>ja
inoremap <C-k> <Esc>ka
inoremap <C-l> <Esc>la
"打开窗口
map s <nop>
map sl :vsplit<CR>
map sk :split<CR>



"切换窗口
map <LEADER>w <C-w>w
map <LEADER>k <C-w>k
map <LEADER>j <C-w>j
map <LEADER>h <C-w>h
map <LEADER>l <C-w>l


map tx :r !figlet

" Compile function
map r :call CompileRunGcc()<CR>
func! CompileRunGcc()
  exec "w"
  if &filetype == 'c'
    exec "!g++ % -o %<"
    exec "!time ./%<"
  elseif &filetype == 'cpp'
    exec "!g++ % -o %<"
    exec "!time ./%<"
  elseif &filetype == 'java'
    exec "!javac %"
    exec "!time java %<"
  elseif &filetype == 'sh'
    :!time bash %
  elseif &filetype == 'python'
    silent! exec "!clear"
    exec "!time python3 %"
  elseif &filetype == 'html'
    exec "!firefox % &"
  elseif &filetype == 'markdown'
    exec "MarkdownPreview"
  elseif &filetype == 'vimwiki'
    exec "MarkdownPreview"
  endif
endfunc

map R :w<CR>:source $MYVIMRC<CR>

imap <C-c> <Esc>zza
nmap <C-c> <Esc>zz
map <LEADER><LEADER> <Esc>/<++><CR>:nohlsearch<CR>4xi



map <LEADER>k o<Esc>k






call plug#begin('~/.vim/plugged')

Plug 'vim-airline/vim-airline'
Plug 'connorholyday/vim-snazzy'
"Plug 'ycm-core/YouCompleteMe' 自动补全，须vim支持python3
" HTML, CSS, JavaScript, PHP, JSON, etc.
Plug 'elzr/vim-json'
Plug 'hail2u/vim-css3-syntax'
Plug 'spf13/PIV', { 'for' :['php', 'vim-plug'] }
Plug 'gko/vim-coloresque', { 'for': ['vim-plug', 'php', 'html', 'javascript', 'css', 'less'] }
Plug 'pangloss/vim-javascript', { 'for' :['javascript', 'vim-plug'] }
Plug 'mattn/emmet-vim'

" Python
Plug 'vim-scripts/indentpython.vim'
" Plug 'vim-python/python-syntax', { 'for' :['python', 'vim-plug'] }

" Markdown
Plug 'iamcco/markdown-preview.nvim', { 'do': { -> mkdp#util#install_sync() }, 'for' :['markdown', 'vim-plug'] }
Plug 'dhruvasagar/vim-table-mode', { 'on': 'TableModeToggle' }
Plug 'vimwiki/vimwiki'

"markdownpreview
"vim-table-mode
"vimwiki
"https://github.com/theniceboy/.vim
call plug#end()


let g:SnazzyTransparent = 1
color snazzy



" ===
" === MarkdownPreview
" ===
let g:mkdp_auto_start = 0
let g:mkdp_auto_close = 1
let g:mkdp_refresh_slow = 0
let g:mkdp_command_for_global = 0
let g:mkdp_open_to_the_world = 0
let g:mkdp_open_ip = ''
let g:mkdp_browser = 'chromium'
let g:mkdp_echo_preview_url = 0
let g:mkdp_browserfunc = ''
let g:mkdp_preview_options = {
    \ 'mkit': {},
    \ 'katex': {},
    \ 'uml': {},
    \ 'maid': {},
    \ 'disable_sync_scroll': 0,
    \ 'sync_scroll_type': 'middle',
    \ 'hide_yaml_meta': 1
    \ }
let g:mkdp_markdown_css = ''
let g:mkdp_highlight_css = ''
let g:mkdp_port = ''
let g:mkdp_page_title = '「${name}」'


" ===
" === Python-syntax
" ===
let g:python_highlight_all = 1
" ===
" === vim-table-mode
" ===
map <LEADER>tm :TableModeToggle<CR>

let g:vimwiki_list = [{
  \ 'automatic_nested_syntaxes':1,
  \ 'path_html': '~/wiki_html',
  \ 'path': '~/wiki',
  \ 'template_path': '~/.vim/vimwiki/template/',
  \ 'syntax': 'markdown',
  \ 'ext':'.md',
  \ 'template_default':'markdown',
  \ 'custom_wiki2html': '~/.vim/vimwiki/wiki2html.sh',
  \ 'template_ext':'.html'
\}]

au BufRead,BufNewFile *.md set filetype=vimwiki

let g:taskwiki_sort_orders={"C": "pri-"}
let g:taskwiki_syntax = 'markdown'
let g:taskwiki_markdown_syntax='markdown'
let g:taskwiki_markup_syntax='markdown'

inoremap ,f <Esc>/<++><CR>:nohlsearch<CR>4xi
inoremap ,n ---<Enter><Enter>
inoremap ,b **** <++><Esc>F*hi
inoremap ,s ~~~~ <++><Esc>F~hi
inoremap ,i ** <++><Esc>F*i
inoremap ,d `` <++><Esc>F`i
inoremap ,c ```<Enter><++><Enter>```<Enter><Enter><++><Esc>4kA
inoremap ,h ====<Space><++><Esc>F=hi
inoremap ,p ![](<++>) <++><Esc>F[a
inoremap ,a [](<++>) <++><Esc>F[a
inoremap ,1 #<Space><Enter><++><Esc>kA
inoremap ,2 ##<Space><Enter><++><Esc>kA
inoremap ,3 ###<Space><Enter><++><Esc>kA
inoremap ,4 ####<Space><Enter><++><Esc>kA
inoremap ,l --------<Enter>


